from django.contrib.auth.backends import ModelBackend
from users.models import Users
from django.conf import settings
from django.contrib.auth.hashers import check_password
from django.contrib.auth.models import User
'''
from django.contrib.auth.backends import ModelBackend
from users.models import Users
from django.contrib.auth.hashers import *
from login.util import *
'''

class PersonalizedLoginBackend(ModelBackend):
    def authenticate(self, request=None, username=None, password=None, **kwars):
        #Here define you login criteria, like encrypting the password and then
        #Checking it matches. This is an example:
        print("ffffffffffffffff")
        try:
            user = Users.objects.get(username=username)
        except Users.DoesNotExist:
            return None
        if check_password(password, user.password):
            return user
        else:
            return None

    def get_user(self, user_id):
        #This shall return the user given the id
        from django.contrib.auth.models import AnonymousUser
        try:
            user = Users.objects.get(id=user_id)
        except Exception as e:
            user = AnonymousUser()
        return user
